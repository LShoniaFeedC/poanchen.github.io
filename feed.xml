<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PoAn (Baron) Chen's site</title>
    <description>A blog written by PoAn (Baron) Chen.</description>
    <link>https://poanchen.github.io/</link>
    <atom:link href="https://poanchen.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 14 Sep 2019 05:58:51 +0000</pubDate>
    <lastBuildDate>Sat, 14 Sep 2019 05:58:51 +0000</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>
    
      <item>
        <title>What is a Pure function and how can it be a good practice?</title>
        <description>&lt;h2 id=&quot;what-is-a-pure-function&quot;&gt;What is a pure function?&lt;/h2&gt; &lt;p&gt;Pure function is a function that &lt;strong&gt;its return value is determined by its inputs and nothing else&lt;/strong&gt;. Simple as that. Let me give you an example of a pure function in Java,&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PureFunction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;...</description>
        <pubDate>Wed, 11 Sep 2019 08:30:30 +0000</pubDate>
        <link>https://poanchen.github.io/blog/2019/09/11/what-is-a-pure-function-and-how-can-it-be-a-good-practice</link>
        <guid isPermaLink="true">https://poanchen.github.io/blog/2019/09/11/what-is-a-pure-function-and-how-can-it-be-a-good-practice</guid>
        
        <category>Java</category>
        
        <category>PoAn (Baron) Chen</category>
        
        <category>React</category>
        
        <category>Redux</category>
        
        
      </item>
    
      <item>
        <title>The easiest way to make Let's Encrypt renewal automated</title>
        <description>&lt;p&gt;Are you using Let’s Encrypt as your CA (certificate authority) to issue you a trusted certificate for your own domain? Sometimes forgetting to renew when it expires every 90 days? Keep getting email warning you about the expiry date of your SSL certificate? or find out the hard way by getting email about the complain of your site not being able to access due to the expired SSL certificate? You are in luck, in this short tutorial, I am going to show you guys how to make Let’s Encrypt renewal automatic. So that you will never have to worry about...</description>
        <pubDate>Sat, 13 Jul 2019 08:30:30 +0000</pubDate>
        <link>https://poanchen.github.io/blog/2019/07/13/The-easiest-way-to-make-Let-s-Encrypt-renewal-automated</link>
        <guid isPermaLink="true">https://poanchen.github.io/blog/2019/07/13/The-easiest-way-to-make-Let-s-Encrypt-renewal-automated</guid>
        
        <category>PoAn (Baron) Chen</category>
        
        <category>Let's Encrypt</category>
        
        <category>Cron</category>
        
        <category>Bash</category>
        
        
      </item>
    
      <item>
        <title>How to add Azure Pipelines badge to your repository's README in GitHub?</title>
        <description>&lt;p&gt;Ever wanted to be cool? not just anyone-kind-cool but developer-kind-cool or better yet Azure-kind-cool. Do you have a project hosting on GitHub and you would like to show the status of your build? How green it has always been? You are in luck. In this short tutorial, I would like to show you guys how to easily add Azure Pipelines badge into your README on GitHub.&lt;/p&gt; &lt;p&gt;Simply head over to your Azure DevOps page (in this case, my page url looks like this https://dev.azure.com/poanchen/poanchen.github.io), &lt;img src=&quot;/img/2019/07/12/How-to-add-Azure-Pipelines-badge-to-your-repository-s-README-in-GitHub/1.JPG&quot; alt=&quot;Azure DevOps page&quot; /&gt;&lt;/p&gt; &lt;p&gt;Next, ensure Pipeline -&amp;gt; Builds tab is opened. &lt;img src=&quot;/img/2019/07/12/How-to-add-Azure-Pipelines-badge-to-your-repository-s-README-in-GitHub/2.png&quot;...</description>
        <pubDate>Fri, 12 Jul 2019 08:30:30 +0000</pubDate>
        <link>https://poanchen.github.io/blog/2019/07/12/How-to-add-Azure-Pipelines-badge-to-your-repository-s-README-in-GitHub</link>
        <guid isPermaLink="true">https://poanchen.github.io/blog/2019/07/12/How-to-add-Azure-Pipelines-badge-to-your-repository-s-README-in-GitHub</guid>
        
        <category>PoAn (Baron) Chen</category>
        
        <category>Azure</category>
        
        <category>Azure Pipelines</category>
        
        <category>Azure DevOps</category>
        
        <category>GitHub</category>
        
        
      </item>
    
      <item>
        <title>The right way to manage nested callbacks</title>
        <description>&lt;p&gt;In case you do not know what a callback is, please refer to &lt;a href=&quot;https://husseinfaara.com/articles/what-the-heck-is-a-callback&quot;&gt;this&lt;/a&gt; awesome article by &lt;a href=&quot;https://husseinfaara.com/&quot;&gt;Hussein Faara&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;All in all, callbacks are great. With callback, we are allowed to write code in JavaScript asynchronously and it just work. However, in real world, as a Software Engineer, we do not simply expect things to just work and be satisfied with it. We also look at other things. For example, maintainability.&lt;/p&gt; &lt;p&gt;Let’s work with a real world example here to demonstrate what we want to talk about, say, we would like to add couple of songs to a...</description>
        <pubDate>Wed, 19 Jun 2019 08:30:30 +0000</pubDate>
        <link>https://poanchen.github.io/blog/2019/06/19/The-right-way-to-manage-nested-callbacks</link>
        <guid isPermaLink="true">https://poanchen.github.io/blog/2019/06/19/The-right-way-to-manage-nested-callbacks</guid>
        
        <category>PoAn (Baron) Chen</category>
        
        <category>JavaScript</category>
        
        <category>Asynchronous Programming</category>
        
        <category>Callback</category>
        
        <category>Callback hell</category>
        
        <category>Async/await</category>
        
        <category>Promise</category>
        
        
      </item>
    
      <item>
        <title>How to get an interview with Microsoft and what is their interview process like?</title>
        <description>&lt;p&gt;This post talks about how one could get an interview with Microsoft for a Software Engineer role as well as its process. If you already got an interview with them, simply &lt;a href=&quot;#interview-process-at-microsoft&quot;&gt;skip&lt;/a&gt; to the part where I discuss its interview process.&lt;/p&gt; &lt;h2 id=&quot;how-one-could-get-an-interview-with-microsoft-or-any-other-company-by-all-means&quot;&gt;How one could get an interview with Microsoft or any other company by all means&lt;/h2&gt; &lt;p&gt;&lt;img src=&quot;\img\2019\05\20\How-to-get-an-interview-with-Microsoft-and-what-is-their-interview-process-like/Microsoft visit.jpg&quot; alt=&quot;Me visiting Microsoft Redmond Campus&quot; /&gt;&lt;/p&gt; &lt;p&gt;As I have been interviewing with Microsoft for multiple times in the past three years, I feel I am somewhat qualify to talk about it. As you can imagine, some people would say...</description>
        <pubDate>Sat, 18 May 2019 08:30:30 +0000</pubDate>
        <link>https://poanchen.github.io/blog/2019/05/18/How-to-get-an-interview-with-Microsoft-and-what-is-their-interview-process-like</link>
        <guid isPermaLink="true">https://poanchen.github.io/blog/2019/05/18/How-to-get-an-interview-with-Microsoft-and-what-is-their-interview-process-like</guid>
        
        <category>PoAn (Baron) Chen</category>
        
        <category>Microsoft</category>
        
        <category>Interview Prep</category>
        
        
      </item>
    
      <item>
        <title>How to calculate time complexity of an algorithm?</title>
        <description>&lt;p&gt;Knowing how fast your algorithm runs is extremely important. Often times, you will get asked to determine your algorithm performance in a big-O sense during interview. You will be expected to know how to calculate the time and space complexity of your code, sometimes you even need to explain how you get there. In some cases, it can be pretty tricky to get it right. In this article, I am going to show you guys how to do things right.&lt;/p&gt; &lt;p&gt;In most of the cases, you are going to see these kind of Big-O running time in your code.&lt;/p&gt; &lt;p&gt;&lt;img...</description>
        <pubDate>Fri, 23 Nov 2018 08:30:30 +0000</pubDate>
        <link>https://poanchen.github.io/blog/2018/11/23/how-to-calculate-time-complexity-of-an-algorithm</link>
        <guid isPermaLink="true">https://poanchen.github.io/blog/2018/11/23/how-to-calculate-time-complexity-of-an-algorithm</guid>
        
        <category>PoAn (Baron) Chen</category>
        
        <category>Algorithm</category>
        
        
      </item>
    
      <item>
        <title>How to fix login must use security token in Salesforce?</title>
        <description>&lt;p&gt;Recently, I ran into this error message in Salesforce where it stated that &lt;strong&gt;“LOGIN_MUST_USE_SECURITY_TOKEN: Invalid username, password, security token; or user locked out. Are you at a new location? When accessing Salesforce–either via a desktop client or the API–from outside of your company’s trusted networks, you must add a security token to your password to log in. To get your new security token, log in to Salesforce. From your personal settings, enter Reset My Security Token in the Quick Find box, then select Reset My Security Token.”&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;According to the official Salesforce documentation about &lt;a href=&quot;https://developer.salesforce.com/docs/atlas.en-us.api.meta/api/sforce_api_concepts_security.htm&quot;&gt;User Authentication&lt;/a&gt;, there are two...</description>
        <pubDate>Mon, 27 Aug 2018 08:30:30 +0000</pubDate>
        <link>https://poanchen.github.io/blog/2018/08/27/how-to-fix-login-must-use-security-token-in-Salesforce</link>
        <guid isPermaLink="true">https://poanchen.github.io/blog/2018/08/27/how-to-fix-login-must-use-security-token-in-Salesforce</guid>
        
        <category>PoAn (Baron) Chen</category>
        
        <category>Salesforce</category>
        
        
      </item>
    
      <item>
        <title>How to set up GPG key on GitHub?</title>
        <description>&lt;p&gt;Setting up GPG keys on GitHub is important because it allows other to know that you made the commit and not someone else. You, the person with your GitHub profile picture along with your GitHub username and name. Here is an example of a signing commit looks like on GitHub.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/img/2018/03/23/how-to-set-up-gpg-key-in-github/signing commit sample.png&quot; alt=&quot;signing commit sample&quot; /&gt;&lt;/p&gt; &lt;p&gt;Just like the &lt;a href=&quot;https://blog.github.com/2016-04-05-gpg-signature-verification/&quot;&gt;blog&lt;/a&gt; from GitHub mentioned, unlike any other unsigned commit. The signed commit will come with the green word &lt;em&gt;Verified&lt;/em&gt; with it (a badge) to indicate that the commit was indeed came from the user. In example,&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/img/2018/03/23/how-to-set-up-gpg-key-in-github/commits...</description>
        <pubDate>Fri, 23 Mar 2018 23:59:14 +0000</pubDate>
        <link>https://poanchen.github.io/blog/2018/03/23/how-to-set-up-gpg-key-on-github</link>
        <guid isPermaLink="true">https://poanchen.github.io/blog/2018/03/23/how-to-set-up-gpg-key-on-github</guid>
        
        <category>GitHub</category>
        
        <category>GPG key</category>
        
        <category>PoAn (Baron) Chen</category>
        
        <category>Security</category>
        
        <category>Signing git commit</category>
        
        <category>Windows 10</category>
        
        
      </item>
    
      <item>
        <title>How to fix permission denied for relation some_table_name in PostgreSQL?</title>
        <description>&lt;p&gt;Ever needed to create a bunch of tables for a newly created user to access in PostgreSQL and see the following error message pop up, ‘&lt;strong&gt;permission denied for relation some_table_name&lt;/strong&gt;’? You are in luck, in this tutorial, I am going to guide you guys through it to make the error message goes away.&lt;/p&gt; &lt;p&gt;Let me give you guys an example on how this error message might occur (at least this is how I found out),&lt;/p&gt; &lt;p&gt;Check out this following sql file,&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;database&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;USER&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;someuser&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt;...</description>
        <pubDate>Wed, 07 Mar 2018 08:30:30 +0000</pubDate>
        <link>https://poanchen.github.io/blog/2018/03/07/How-to-fix-permission-denied-for-relation-some_table_name-in-PostgreSQL</link>
        <guid isPermaLink="true">https://poanchen.github.io/blog/2018/03/07/How-to-fix-permission-denied-for-relation-some_table_name-in-PostgreSQL</guid>
        
        <category>Database</category>
        
        <category>PoAn (Baron) Chen</category>
        
        <category>PostgreSQL</category>
        
        <category>SQL</category>
        
        
      </item>
    
      <item>
        <title>How to delete a commit completely in GitHub?</title>
        <description>&lt;p&gt;Ever needed to delete a commit completely in GitHub but tried hundred of thousands of tutorials and still does not work? You are in luck! In this tutorial, I am going to teach you guys how to make a GitHub commit disappear forever. Note: before you carry on with this tutorial, make sure you do not have any local changes or stash all your local changes to be safe.&lt;/p&gt; &lt;p&gt;Follow this tutorial in order to delete one or more commits in GitHub. First, you use the following command to list all or some of your latest GitHub commits.&lt;/p&gt; &lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code...</description>
        <pubDate>Sat, 24 Feb 2018 08:30:30 +0000</pubDate>
        <link>https://poanchen.github.io/blog/2018/02/24/How-to-delete-a-commit-completely-in-GitHub</link>
        <guid isPermaLink="true">https://poanchen.github.io/blog/2018/02/24/How-to-delete-a-commit-completely-in-GitHub</guid>
        
        <category>Git</category>
        
        <category>GitHub</category>
        
        <category>GitHub commit</category>
        
        <category>PoAn (Baron) Chen</category>
        
        
      </item>
    
  </channel>
</rss>
